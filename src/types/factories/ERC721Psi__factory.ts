/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC721Psi, ERC721PsiInterface } from "../ERC721Psi";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001a6c38038062001a6c8339810160408190526200003491620001c1565b81516200004990600190602085019062000068565b5080516200005f90600290602084019062000068565b5050506200027b565b828054620000769062000228565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200011f578081fd5b81516001600160401b03808211156200013c576200013c62000265565b604051601f8301601f19908116603f0116810190828211818310171562000167576200016762000265565b8160405283815260209250868385880101111562000183578485fd5b8491505b83821015620001a6578582018301518183018401529082019062000187565b83821115620001b757848385830101525b9695505050505050565b60008060408385031215620001d4578182fd5b82516001600160401b0380821115620001eb578384fd5b620001f9868387016200010e565b935060208501519150808211156200020f578283fd5b506200021e858286016200010e565b9150509250929050565b600181811c908216806200023d57607f821691505b602082108114156200025f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6117e1806200028b6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80634f6ccce711610097578063a22cb46511610066578063a22cb4651461020e578063b88d4fde14610221578063c87b56dd14610234578063e985e9c51461024757600080fd5b80634f6ccce7146101cd5780636352211e146101e057806370a08231146101f357806395d89b411461020657600080fd5b806318160ddd116100d357806318160ddd1461018257806323b872dd146101945780632f745c59146101a757806342842e0e146101ba57600080fd5b806301ffc9a71461010557806306fdde031461012d578063081812fc14610142578063095ea7b31461016d575b600080fd5b6101186101133660046113d3565b610283565b60405190151581526020015b60405180910390f35b6101356102f0565b60405161012491906114bb565b61015561015036600461140b565b610382565b6040516001600160a01b039091168152602001610124565b61018061017b3660046113aa565b610414565b005b6004545b604051908152602001610124565b6101806101a2366004611260565b61052c565b6101866101b53660046113aa565b61055d565b6101806101c8366004611260565b610628565b6101866101db36600461140b565b610643565b6101556101ee36600461140b565b6106fe565b610186610201366004611214565b610712565b6101356107e3565b61018061021c366004611370565b6107f2565b61018061022f36600461129b565b6108b7565b61013561024236600461140b565b6108ef565b61011861025536600461122e565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b14806102b457506001600160e01b03198216635b5e139f60e01b145b806102cf57506001600160e01b0319821663780e9d6360e01b145b806102ea57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600180546102ff906115e6565b80601f016020809104026020016040519081016040528092919081815260200182805461032b906115e6565b80156103785780601f1061034d57610100808354040283529160200191610378565b820191906000526020600020905b81548152906001019060200180831161035b57829003601f168201915b5050505050905090565b600061038f826004541190565b6103f85760405162461bcd60e51b815260206004820152602f60248201527f4552433732315073693a20617070726f76656420717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084015b60405180910390fd5b506000908152600560205260409020546001600160a01b031690565b600061041f826106fe565b9050806001600160a01b0316836001600160a01b0316141561048f5760405162461bcd60e51b8152602060048201526024808201527f4552433732315073693a20617070726f76616c20746f2063757272656e74206f6044820152633bb732b960e11b60648201526084016103ef565b336001600160a01b03821614806104ab57506104ab8133610255565b61051d5760405162461bcd60e51b815260206004820152603b60248201527f4552433732315073693a20617070726f76652063616c6c6572206973206e6f7460448201527f206f776e6572206e6f7220617070726f76656420666f7220616c6c000000000060648201526084016103ef565b61052783836109c4565b505050565b6105363382610a32565b6105525760405162461bcd60e51b81526004016103ef90611523565b610527838383610b21565b60008060005b6004548110156105d357610578816004541190565b801561059d5750610588816106fe565b6001600160a01b0316856001600160a01b0316145b156105c157838214156105b35791506102ea9050565b816105bd81611621565b9250505b806105cb81611621565b915050610563565b5060405162461bcd60e51b8152602060048201526024808201527f4552433732315073693a206f776e657220696e646578206f7574206f6620626f604482015263756e647360e01b60648201526084016103ef565b610527838383604051806020016040528060008152506108b7565b600061064e60045490565b82106106aa5760405162461bcd60e51b815260206004820152602560248201527f4552433732315073693a20676c6f62616c20696e646578206f7574206f6620626044820152646f756e647360d81b60648201526084016103ef565b6000805b6004548110156106f7576106c3816004541190565b156106e557838214156106d7579392505050565b816106e181611621565b9250505b806106ef81611621565b9150506106ae565b5050919050565b60008061070a83610d0d565b509392505050565b60006001600160a01b0382166107805760405162461bcd60e51b815260206004820152602d60248201527f4552433732315073693a2062616c616e636520717565727920666f722074686560448201526c207a65726f206164647265737360981b60648201526084016103ef565b6000805b6004548110156107dc57610799816004541190565b156107cc576107a7816106fe565b6001600160a01b0316846001600160a01b031614156107cc576107c982611621565b91505b6107d581611621565b9050610784565b5092915050565b6060600280546102ff906115e6565b6001600160a01b03821633141561084b5760405162461bcd60e51b815260206004820152601c60248201527f4552433732315073693a20617070726f766520746f2063616c6c65720000000060448201526064016103ef565b3360008181526006602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6108c13383610a32565b6108dd5760405162461bcd60e51b81526004016103ef90611523565b6108e984848484610da6565b50505050565b60606108fc826004541190565b61095b5760405162461bcd60e51b815260206004820152602a60248201527f4552433732315073693a2055524920717565727920666f72206e6f6e657869736044820152693a32b73a103a37b5b2b760b11b60648201526084016103ef565b600061097260408051602081019091526000815290565b9050600081511161099257604051806020016040528060008152506109bd565b8061099c84610ddb565b6040516020016109ad92919061144f565b6040516020818303038152906040525b9392505050565b600081815260056020526040902080546001600160a01b0319166001600160a01b03841690811790915581906109f9826106fe565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610a3f826004541190565b610aa35760405162461bcd60e51b815260206004820152602f60248201527f4552433732315073693a206f70657261746f7220717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016103ef565b6000610aae836106fe565b9050806001600160a01b0316846001600160a01b03161480610ae95750836001600160a01b0316610ade84610382565b6001600160a01b0316145b80610b1957506001600160a01b0380821660009081526006602090815260408083209388168352929052205460ff165b949350505050565b600080610b2d83610d0d565b91509150846001600160a01b0316826001600160a01b031614610ba75760405162461bcd60e51b815260206004820152602c60248201527f4552433732315073693a207472616e73666572206f6620746f6b656e2074686160448201526b3a1034b9903737ba1037bbb760a11b60648201526084016103ef565b6001600160a01b038416610c0d5760405162461bcd60e51b815260206004820152602760248201527f4552433732315073693a207472616e7366657220746f20746865207a65726f206044820152666164647265737360c81b60648201526084016103ef565b610c186000846109c4565b6000610c25846001611577565b600881901c600090815260208190526040902054909150600160ff1b60ff83161c16158015610c55575060045481105b15610c8b57600081815260036020526040812080546001600160a01b0319166001600160a01b038916179055610c8b9082610ef5565b600084815260036020526040902080546001600160a01b0319166001600160a01b038716179055818414610cc457610cc4600085610ef5565b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b600080610d1b836004541190565b610d7c5760405162461bcd60e51b815260206004820152602c60248201527f4552433732315073693a206f776e657220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103ef565b610d8583610f21565b6000818152600360205260409020546001600160a01b031694909350915050565b610db1848484610b21565b610dbf848484600185610f2d565b6108e95760405162461bcd60e51b81526004016103ef906114ce565b606081610dff5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610e295780610e1381611621565b9150610e229050600a8361158f565b9150610e03565b60008167ffffffffffffffff811115610e5257634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610e7c576020820181803683370190505b5090505b8415610b1957610e916001836115a3565b9150610e9e600a8661163c565b610ea9906030611577565b60f81b818381518110610ecc57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350610eee600a8661158f565b9450610e80565b600881901c600090815260209290925260409091208054600160ff1b60ff9093169290921c9091179055565b60006102ea8183611070565b60006001600160a01b0385163b1561106357506001835b610f4e8486611577565b81101561105d57604051630a85bd0160e11b81526001600160a01b0387169063150b7a0290610f879033908b908690899060040161147e565b602060405180830381600087803b158015610fa157600080fd5b505af1925050508015610fd1575060408051601f3d908101601f19168201909252610fce918101906113ef565b60015b61102b573d808015610fff576040519150601f19603f3d011682016040523d82523d6000602084013e611004565b606091505b5080516110235760405162461bcd60e51b81526004016103ef906114ce565b805181602001fd5b82801561104857506001600160e01b03198116630a85bd0160e11b145b9250508061105581611621565b915050610f44565b50611067565b5060015b95945050505050565b600881901c60008181526020849052604081205490919060ff808516919082181c80156110b2576110a081611168565b60ff168203600884901b17935061115f565b6000831161111f5760405162461bcd60e51b815260206004820152603460248201527f4269744d6170733a205468652073657420626974206265666f7265207468652060448201527334b73232bc103237b2b9b713ba1032bc34b9ba1760611b60648201526084016103ef565b50600019909101600081815260208690526040902054909190801561115a5761114781611168565b60ff0360ff16600884901b17935061115f565b6110b2565b50505092915050565b600060405180610120016040528061010081526020016116ac610100913960f87e818283848586878898a8b8c8d8e8f929395969799a9b9d9e9faaeb6bedeeff6111b1856111e0565b02901c815181106111d257634e487b7160e01b600052603260045260246000fd5b016020015160f81c92915050565b60008082116111ee57600080fd5b5060008190031690565b80356001600160a01b038116811461120f57600080fd5b919050565b600060208284031215611225578081fd5b6109bd826111f8565b60008060408385031215611240578081fd5b611249836111f8565b9150611257602084016111f8565b90509250929050565b600080600060608486031215611274578081fd5b61127d846111f8565b925061128b602085016111f8565b9150604084013590509250925092565b600080600080608085870312156112b0578081fd5b6112b9856111f8565b93506112c7602086016111f8565b925060408501359150606085013567ffffffffffffffff808211156112ea578283fd5b818701915087601f8301126112fd578283fd5b81358181111561130f5761130f61167c565b604051601f8201601f19908116603f011681019083821181831017156113375761133761167c565b816040528281528a602084870101111561134f578586fd5b82602086016020830137918201602001949094529598949750929550505050565b60008060408385031215611382578182fd5b61138b836111f8565b91506020830135801515811461139f578182fd5b809150509250929050565b600080604083850312156113bc578182fd5b6113c5836111f8565b946020939093013593505050565b6000602082840312156113e4578081fd5b81356109bd81611692565b600060208284031215611400578081fd5b81516109bd81611692565b60006020828403121561141c578081fd5b5035919050565b6000815180845261143b8160208601602086016115ba565b601f01601f19169290920160200192915050565b600083516114618184602088016115ba565b8351908301906114758183602088016115ba565b01949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906114b190830184611423565b9695505050505050565b6020815260006109bd6020830184611423565b60208082526035908201527f4552433732315073693a207472616e7366657220746f206e6f6e20455243373260408201527418a932b1b2b4bb32b91034b6b83632b6b2b73a32b960591b606082015260800190565b60208082526034908201527f4552433732315073693a207472616e736665722063616c6c6572206973206e6f6040820152731d081bdddb995c881b9bdc88185c1c1c9bdd995960621b606082015260800190565b6000821982111561158a5761158a611650565b500190565b60008261159e5761159e611666565b500490565b6000828210156115b5576115b5611650565b500390565b60005b838110156115d55781810151838201526020016115bd565b838111156108e95750506000910152565b600181811c908216806115fa57607f821691505b6020821081141561161b57634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561163557611635611650565b5060010190565b60008261164b5761164b611666565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146116a857600080fd5b5056fe0001020903110a19042112290b311a3905412245134d2a550c5d32651b6d3a7506264262237d468514804e8d2b95569d0d495ea533a966b11c886eb93bc176c9071727374353637324837e9b47af86c7155181ad4fd18ed32c9096db57d59ee30e2e4a6a5f92a6be3498aae067ddb2eb1d5989b56fd7baf33ca0c2ee77e5caf7ff0810182028303840444c545c646c7425617c847f8c949c48a4a8b087b8c0c816365272829aaec650acd0d28fdad4e22d6991bd97dfdcea58b4d6f29fede4f6fe0f1f2f3f4b5b6b607b8b93a3a7b7bf357199c5abcfd9e168bcdee9b3f1ecf5fd1e3e5a7a8aa2b670c4ced8bbe8f0f4fc3d79a1c3cde7effb78cce6facbf9f8a26469706673582212206e1faa4a1dd5a20a764940d788485acdc7af7762e0b219d61009f425b6e0e1db64736f6c63430008040033";

export class ERC721Psi__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721Psi> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC721Psi>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  attach(address: string): ERC721Psi {
    return super.attach(address) as ERC721Psi;
  }
  connect(signer: Signer): ERC721Psi__factory {
    return super.connect(signer) as ERC721Psi__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721PsiInterface {
    return new utils.Interface(_abi) as ERC721PsiInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Psi {
    return new Contract(address, _abi, signerOrProvider) as ERC721Psi;
  }
}
